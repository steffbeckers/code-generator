//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:5.0.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CodeGen.Templates.Projects.Angular.src.app.modules.components.detail {
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using CodeGen.Framework.Extensions;
    using CodeGen.Models;
    using System;
    
    
    public partial class ModelDetailComponentHTMLTemplate : ModelDetailComponentHTMLTemplateBase {
        
        public virtual string TransformText() {
            this.GenerationEnvironment = null;
            
            #line 8 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
 CodeGenModelProperty defaultKey = _config.Models.DefaultKey(_model); 
            
            #line default
            #line hidden
            
            #line 9 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write("<ng-container *ngIf=\"(");
            
            #line default
            #line hidden
            
            #line 9 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( _model.Name.ToLower() ));
            
            #line default
            #line hidden
            
            #line 9 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write("$ | async) === null\">\r\n  <p>Loading...</p>\r\n</ng-container>\r\n<ng-container *ngIf=" +
                    "\"");
            
            #line default
            #line hidden
            
            #line 12 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( _model.Name.ToLower() ));
            
            #line default
            #line hidden
            
            #line 12 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write("$ | async as ");
            
            #line default
            #line hidden
            
            #line 12 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( _model.Name.ToLower() ));
            
            #line default
            #line hidden
            
            #line 12 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write("\">\r\n  <div fxLayout=\"column\" fxLayoutGap=\"16px\">\r\n    <header fxLayout=\"row\" fxLa" +
                    "youtAlign=\"space-between\" fxLayoutGap=\"32px\">\r\n      <h2 class=\"title\">");
            
            #line default
            #line hidden
            
            #line 15 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( _model.Name ));
            
            #line default
            #line hidden
            
            #line 15 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write(": {{ ");
            
            #line default
            #line hidden
            
            #line 15 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( _model.Name.ToLower() ));
            
            #line default
            #line hidden
            
            #line 15 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write(@".name }}</h2>
      <div fxLayout=""row"" fxLayoutGap=""16px"">
        <button fxFlex=""100px"" (click)=""delete()"">Delete</button>
        <button fxFlex=""100px"" routerLink=""edit"">Edit</button>
      </div>
    </header>
    <main fxLayout=""column"" fxLayoutGap=""16px"">
      <div fxLayout=""row wrap"" fxLayoutGap=""16px"">
");
            
            #line default
            #line hidden
            
            #line 23 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
 foreach (CodeGenModelProperty property in _model.Properties.Where(x => x.Name != defaultKey.Name).ToList()) { 
            
            #line default
            #line hidden
            
            #line 24 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write("        <div class=\"field\" fxLayout=\"column\" fxLayoutGap=\"4px\">\r\n          <label" +
                    ">");
            
            #line default
            #line hidden
            
            #line 25 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( property.DisplayName ));
            
            #line default
            #line hidden
            
            #line 25 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write("</label>\r\n          <div>{{ ");
            
            #line default
            #line hidden
            
            #line 26 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( _model.Name.ToLower() ));
            
            #line default
            #line hidden
            
            #line 26 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write(".");
            
            #line default
            #line hidden
            
            #line 26 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( property.Name.ToCamelCase() ));
            
            #line default
            #line hidden
            
            #line 26 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write(" }}</div>\r\n        </div>\r\n");
            
            #line default
            #line hidden
            
            #line 28 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 29 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write("      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=" +
                    "\"16px\">\r\n");
            
            #line default
            #line hidden
            
            #line 31 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
 CodeGenModelProperty auditDateCreatedProperty = _config.Models.Defaults.Properties.FirstOrDefault(x => x.AuditDateCreated); 
            
            #line default
            #line hidden
            
            #line 32 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
 if (auditDateCreatedProperty != null) { 
            
            #line default
            #line hidden
            
            #line 33 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write("        <div class=\"field\" fxLayout=\"column\" fxLayoutGap=\"4px\">\r\n          <label" +
                    ">");
            
            #line default
            #line hidden
            
            #line 34 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( auditDateCreatedProperty.DisplayName ));
            
            #line default
            #line hidden
            
            #line 34 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write("</label>\r\n          <div>{{ ");
            
            #line default
            #line hidden
            
            #line 35 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( _model.Name.ToLower() ));
            
            #line default
            #line hidden
            
            #line 35 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write(".");
            
            #line default
            #line hidden
            
            #line 35 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( auditDateCreatedProperty.Name.ToCamelCase() ));
            
            #line default
            #line hidden
            
            #line 35 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write(" | date: \"dd/MM/yyyy HH:mm:ss\" }}</div>\r\n        </div>\r\n");
            
            #line default
            #line hidden
            
            #line 37 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 38 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
 CodeGenModelProperty auditDateModifiedProperty = _config.Models.Defaults.Properties.FirstOrDefault(x => x.AuditDateModified); 
            
            #line default
            #line hidden
            
            #line 39 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
 if (auditDateModifiedProperty != null) { 
            
            #line default
            #line hidden
            
            #line 40 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write("        <div class=\"field\" fxLayout=\"column\" fxLayoutGap=\"4px\">\r\n          <label" +
                    ">");
            
            #line default
            #line hidden
            
            #line 41 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( auditDateModifiedProperty.DisplayName ));
            
            #line default
            #line hidden
            
            #line 41 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write("</label>\r\n          <div>{{ ");
            
            #line default
            #line hidden
            
            #line 42 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( _model.Name.ToLower() ));
            
            #line default
            #line hidden
            
            #line 42 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write(".");
            
            #line default
            #line hidden
            
            #line 42 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( auditDateModifiedProperty.Name.ToCamelCase() ));
            
            #line default
            #line hidden
            
            #line 42 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write(" | date: \"dd/MM/yyyy HH:mm:ss\" }}</div>\r\n        </div>\r\n");
            
            #line default
            #line hidden
            
            #line 44 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 45 "Templates\Projects\Angular\src\app\modules\components\detail\ModelDetailComponentHTMLTemplate.tt"
            this.Write("      </div>\r\n    </main>\r\n  </div>\r\n</ng-container>\r\n");
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        public virtual void Initialize() {
        }
    }
    
    public class ModelDetailComponentHTMLTemplateBase {
        
        private global::System.Text.StringBuilder builder;
        
        private global::System.Collections.Generic.IDictionary<string, object> session;
        
        private global::System.CodeDom.Compiler.CompilerErrorCollection errors;
        
        private string currentIndent = string.Empty;
        
        private global::System.Collections.Generic.Stack<int> indents;
        
        private ToStringInstanceHelper _toStringHelper = new ToStringInstanceHelper();
        
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session {
            get {
                return this.session;
            }
            set {
                this.session = value;
            }
        }
        
        public global::System.Text.StringBuilder GenerationEnvironment {
            get {
                if ((this.builder == null)) {
                    this.builder = new global::System.Text.StringBuilder();
                }
                return this.builder;
            }
            set {
                this.builder = value;
            }
        }
        
        protected global::System.CodeDom.Compiler.CompilerErrorCollection Errors {
            get {
                if ((this.errors == null)) {
                    this.errors = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errors;
            }
        }
        
        public string CurrentIndent {
            get {
                return this.currentIndent;
            }
        }
        
        private global::System.Collections.Generic.Stack<int> Indents {
            get {
                if ((this.indents == null)) {
                    this.indents = new global::System.Collections.Generic.Stack<int>();
                }
                return this.indents;
            }
        }
        
        public ToStringInstanceHelper ToStringHelper {
            get {
                return this._toStringHelper;
            }
        }
        
        public void Error(string message) {
            this.Errors.Add(new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message));
        }
        
        public void Warning(string message) {
            global::System.CodeDom.Compiler.CompilerError val = new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message);
            val.IsWarning = true;
            this.Errors.Add(val);
        }
        
        public string PopIndent() {
            if ((this.Indents.Count == 0)) {
                return string.Empty;
            }
            int lastPos = (this.currentIndent.Length - this.Indents.Pop());
            string last = this.currentIndent.Substring(lastPos);
            this.currentIndent = this.currentIndent.Substring(0, lastPos);
            return last;
        }
        
        public void PushIndent(string indent) {
            this.Indents.Push(indent.Length);
            this.currentIndent = (this.currentIndent + indent);
        }
        
        public void ClearIndent() {
            this.currentIndent = string.Empty;
            this.Indents.Clear();
        }
        
        public void Write(string textToAppend) {
            this.GenerationEnvironment.Append(textToAppend);
        }
        
        public void Write(string format, params object[] args) {
            this.GenerationEnvironment.AppendFormat(format, args);
        }
        
        public void WriteLine(string textToAppend) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendLine(textToAppend);
        }
        
        public void WriteLine(string format, params object[] args) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendFormat(format, args);
            this.GenerationEnvironment.AppendLine();
        }
        
        public class ToStringInstanceHelper {
            
            private global::System.IFormatProvider formatProvider = global::System.Globalization.CultureInfo.InvariantCulture;
            
            public global::System.IFormatProvider FormatProvider {
                get {
                    return this.formatProvider;
                }
                set {
                    if ((value != null)) {
                        this.formatProvider = value;
                    }
                }
            }
            
            public string ToStringWithCulture(object objectToConvert) {
                if ((objectToConvert == null)) {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                global::System.Type type = objectToConvert.GetType();
                global::System.Type iConvertibleType = typeof(global::System.IConvertible);
                if (iConvertibleType.IsAssignableFrom(type)) {
                    return ((global::System.IConvertible)(objectToConvert)).ToString(this.formatProvider);
                }
                global::System.Reflection.MethodInfo methInfo = type.GetMethod("ToString", new global::System.Type[] {
                            iConvertibleType});
                if ((methInfo != null)) {
                    return ((string)(methInfo.Invoke(objectToConvert, new object[] {
                                this.formatProvider})));
                }
                return objectToConvert.ToString();
            }
        }
    }
}
