<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="CodeGen.Models" #>
import { Component, OnDestroy, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { BehaviorSubject, Subscription } from 'rxjs';
import { <#= _model.Name #> } from 'src/app/shared/models/<#= _model.Name.ToLower() #>.model';
import { Response } from 'src/app/shared/models/response.model';
import { <#= _model.NamePlural #>Service } from '../<#= _model.NamePlural.ToLower() #>.service';

@Component({
  selector: 'app-<#= _model.NamePlural.ToLower() #>-detail',
  templateUrl: './detail.component.html',
  styleUrls: ['./detail.component.scss'],
})
export class <#= _model.NamePlural #>DetailComponent implements OnInit, OnDestroy {
  private subs: Subscription[] = [];

  <#= _model.Name.ToLower() #>$: BehaviorSubject<<#= _model.Name #>> = new BehaviorSubject<<#= _model.Name #>>(null);

  constructor(
    private <#= _model.NamePlural.ToLower() #>Service: <#= _model.NamePlural #>Service,
    private router: Router,
    private route: ActivatedRoute
  ) {}

  ngOnInit(): void {
    this.subs.push(
      this.route.paramMap.subscribe((paramMap: any) => {
        const id: string = paramMap.params.id;

        this.subs.push(
          this.<#= _model.NamePlural.ToLower() #>Service
            .get<#= _model.Name #>ById(id)
            .subscribe((response: Response) => {
              if (!response.success) {
                // TODO: Check code
                this.router.navigateByUrl('/<#= _model.NamePlural.ToLower() #>');
                return;
              }

              this.<#= _model.Name.ToLower() #>$.next(response.data);
            })
        );
      })
    );
  }

  ngOnDestroy(): void {
    for (const sub of this.subs) {
      sub.unsubscribe();
    }
  }

  delete(): void {
    if (confirm('Are you sure?')) {
      const <#= _model.Name.ToLower() #>: <#= _model.Name #> = this.<#= _model.Name.ToLower() #>$.value;
      this.subs.push(
        this.<#= _model.NamePlural.ToLower() #>Service
          .delete<#= _model.Name #>(<#= _model.Name.ToLower() #>)
          .subscribe((response: Response) => {
            if (response.success) {
              this.router.navigateByUrl('/<#= _model.NamePlural.ToLower() #>');
            }
          })
      );
    }
  }
}
