<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="CodeGenCLI.CodeGenClasses" #>
<#@ import namespace="CodeGenCLI.Extensions" #>
<# foreach (CodeGenModel model in config.Models) { #>
// <#= !string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + "s" #>

mutation create<#= model.Name #>($<#= model.Name.ToCamelCase() #>: <#= model.Name.ToCamelCase() #>Input!) {
  create<#= model.Name #>(<#= model.Name.ToCamelCase() #>: $<#= model.Name.ToCamelCase() #>) {
    id
<# foreach (CodeGenModelProperty property in model.Properties) { #>
    <#= property.Name.ToCamelCase() #>
<# } #>
  }
}

{
  "<#= model.Name.ToCamelCase() #>": {
<# CodeGenModelProperty lastProperty = model.Properties.LastOrDefault(); #>
<# foreach (CodeGenModelProperty property in model.Properties) { #>
    "<#= property.Name.ToCamelCase() #>": ""<#= property != lastProperty ? "," : "" #>
<# } #>
  }
}


<# } #>