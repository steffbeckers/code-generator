// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace CodeGenCLI.Templates.WebAPI
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using CodeGenCLI.CodeGenClasses;
    using CodeGenCLI.Extensions;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class BLLTemplate : BLLTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("using System;\r\nusing System.Collections.Generic;\r\nusing System.Threading.Tasks;\r\n" +
                    "using ");
            
            #line 11 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(!string.IsNullOrEmpty(config.WebAPI.NamespaceRoot) ? config.WebAPI.NamespaceRoot : config.Name));
            
            #line default
            #line hidden
            this.Write(".DAL.Repositories;\r\nusing ");
            
            #line 12 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(!string.IsNullOrEmpty(config.WebAPI.NamespaceRoot) ? config.WebAPI.NamespaceRoot : config.Name));
            
            #line default
            #line hidden
            this.Write(".Models;\r\n\r\nnamespace ");
            
            #line 14 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(!string.IsNullOrEmpty(config.WebAPI.NamespaceRoot) ? config.WebAPI.NamespaceRoot : config.Name));
            
            #line default
            #line hidden
            this.Write(".BLL\r\n{\r\n\t/// <summary>\r\n\t/// The business logic layer for ");
            
            #line 17 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(!string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + "s"));
            
            #line default
            #line hidden
            this.Write(".\r\n\t/// </summary>\r\n    public class ");
            
            #line 19 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("BLL\r\n    {\r\n        private readonly ");
            
            #line 21 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("Repository ");
            
            #line 21 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository;\r\n");
            
            #line 22 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 foreach (CodeGenModelRelation relation in model.Relations.Where(r => r.Type == "many-to-many" && !string.IsNullOrEmpty(r.Through))) { 
            
            #line default
            #line hidden
            
            #line 23 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 if (relation.Model != model.Name) { 
            
            #line default
            #line hidden
            this.Write("        private readonly ");
            
            #line 24 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Model));
            
            #line default
            #line hidden
            this.Write("Repository ");
            
            #line 24 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Model.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository;\r\n");
            
            #line 25 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("        private readonly ");
            
            #line 26 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through));
            
            #line default
            #line hidden
            this.Write("Repository ");
            
            #line 26 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository;\r\n");
            
            #line 27 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t/// <summary>\r\n\t\t/// The constructor of the ");
            
            #line 30 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write(" business logic layer.\r\n\t\t/// </summary>\r\n        public ");
            
            #line 32 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("BLL(\r\n\t\t\t");
            
            #line 33 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("Repository ");
            
            #line 33 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository");
            
            #line 33 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture((model.Relations.Where(r => r.Type == "many-to-many" && !string.IsNullOrEmpty(r.Through)).ToList().Count() > 0 ? "," : "")));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 34 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 foreach (CodeGenModelRelation relation in model.Relations.Where(r => r.Type == "many-to-many" && !string.IsNullOrEmpty(r.Through))) { 
            
            #line default
            #line hidden
            
            #line 35 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 CodeGenModelRelation lastModelManyToManyRelation = model.Relations.Where(r => r.Type == "many-to-many" && !string.IsNullOrEmpty(r.Through)).Last(); 
            
            #line default
            #line hidden
            
            #line 36 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 if (relation.Model != model.Name) { 
            
            #line default
            #line hidden
            this.Write("            ");
            
            #line 37 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Model));
            
            #line default
            #line hidden
            this.Write("Repository ");
            
            #line 37 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Model.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository,\r\n");
            
            #line 38 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 39 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through));
            
            #line default
            #line hidden
            this.Write("Repository ");
            
            #line 39 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository");
            
            #line 39 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture((!relation.Equals(lastModelManyToManyRelation) ? "," : "")));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 40 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t)\r\n        {\r\n            this.");
            
            #line 43 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository = ");
            
            #line 43 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository;\r\n");
            
            #line 44 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 foreach (CodeGenModelRelation relation in model.Relations.Where(r => r.Type == "many-to-many" && !string.IsNullOrEmpty(r.Through))) { 
            
            #line default
            #line hidden
            
            #line 45 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 if (relation.Model != model.Name) { 
            
            #line default
            #line hidden
            this.Write("            this.");
            
            #line 46 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Model.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository = ");
            
            #line 46 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Model.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository;\r\n");
            
            #line 47 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t\tthis.");
            
            #line 48 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository = ");
            
            #line 48 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository;\r\n");
            
            #line 49 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("        }\r\n\r\n\t\t/// <summary>\r\n\t\t/// Retrieves all ");
            
            #line 53 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture((!string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + "s").ToLower()));
            
            #line default
            #line hidden
            this.Write(".\r\n\t\t/// </summary>\r\n\t\tpublic async Task<IEnumerable<");
            
            #line 55 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write(">> GetAll");
            
            #line 55 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(!string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + "s"));
            
            #line default
            #line hidden
            this.Write("Async()\r\n        {\r\n\t\t\t// #-#-# {83B8AA9F-713A-42FB-ADE1-8A4AA43886C8}\r\n\t\t\t// Bef" +
                    "ore retrieval\r\n\t\t\t// #-#-#\r\n\r\n            return await this.");
            
            #line 61 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository.GetWithLinkedEntitiesAsync();\r\n        }\r\n\r\n\t\t/// <summary>\r\n\t\t/// Ret" +
                    "rieves one ");
            
            #line 65 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToLower()));
            
            #line default
            #line hidden
            this.Write(" by Id.\r\n\t\t/// </summary>\r\n\t\tpublic async Task<");
            
            #line 67 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("> Get");
            
            #line 67 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("ByIdAsync(Guid id)\r\n        {\r\n\t\t\t// #-#-# {F838CE2A-D0FB-4F8A-A826-0D653DEECB2B}" +
                    "\r\n\t\t\t// Before retrieval\r\n\t\t\t// #-#-#\r\n\r\n            return await this.");
            
            #line 73 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository.GetWithLinkedEntitiesByIdAsync(id);\r\n        }\r\n\r\n\t\t/// <summary>\r\n\t\t/" +
                    "// Creates a new ");
            
            #line 77 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToLower()));
            
            #line default
            #line hidden
            this.Write(" record.\r\n\t\t/// </summary>\r\n        public async Task<");
            
            #line 79 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("> Create");
            
            #line 79 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("Async(");
            
            #line 79 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 79 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            // Validation\r\n            if (");
            
            #line 82 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(" == null) { return null; }\r\n\r\n\t\t\t// Trimming strings\r\n");
            
            #line 85 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 foreach (CodeGenModelProperty property in model.Properties.Where(p => p.Type == "string")) { 
            
            #line default
            #line hidden
            this.Write("            if (!string.IsNullOrEmpty(");
            
            #line 86 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 86 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write("))\r\n                ");
            
            #line 87 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 87 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 87 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 87 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(".Trim();\r\n");
            
            #line 88 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t// #-#-# {D4775AF3-4BFA-496A-AA82-001028A22DD6}\r\n\t\t\t// Before creation\r\n\t\t\t/" +
                    "/ #-#-#\r\n\r\n\t\t\t");
            
            #line 94 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(" = await this.");
            
            #line 94 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository.InsertAsync(");
            
            #line 94 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n\t\t\t// #-#-# {1972C619-D2F2-48FD-8474-3A69621B1F78}\r\n\t\t\t// After creation\r\n\t" +
                    "\t\t// #-#-#\r\n\r\n            return ");
            
            #line 100 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(";\r\n        }\r\n\r\n\t\t/// <summary>\r\n\t\t/// Updates an existing ");
            
            #line 104 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToLower()));
            
            #line default
            #line hidden
            this.Write(" record by Id.\r\n\t\t/// </summary>\r\n        public async Task<");
            
            #line 106 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("> Update");
            
            #line 106 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("Async(");
            
            #line 106 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 106 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Update)\r\n        {\r\n            // Validation\r\n            if (");
            
            #line 109 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Update == null) { return null; }\r\n\r\n            // Retrieve existing\r\n           " +
                    " ");
            
            #line 112 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 112 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(" = await this.");
            
            #line 112 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository.GetByIdAsync(");
            
            #line 112 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Update.Id);\r\n            if (");
            
            #line 113 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(" == null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n\t\t\t// Tr" +
                    "imming strings\r\n");
            
            #line 119 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 foreach (CodeGenModelProperty property in model.Properties.Where(p => p.Type == "string")) { 
            
            #line default
            #line hidden
            this.Write("            if (!string.IsNullOrEmpty(");
            
            #line 120 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Update.");
            
            #line 120 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write("))\r\n                ");
            
            #line 121 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Update.");
            
            #line 121 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 121 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Update.");
            
            #line 121 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(".Trim();\r\n");
            
            #line 122 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n            // Mapping\r\n");
            
            #line 125 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 foreach (CodeGenModelProperty property in model.Properties) { 
            
            #line default
            #line hidden
            this.Write("            ");
            
            #line 126 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 126 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 126 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Update.");
            
            #line 126 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 127 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 128 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 foreach (CodeGenModelRelation relation in model.Relations.Where(r => r.Type == "many-to-one")) { 
            
            #line default
            #line hidden
            this.Write("            ");
            
            #line 129 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 129 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Name));
            
            #line default
            #line hidden
            this.Write("Id = ");
            
            #line 129 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Update.");
            
            #line 129 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Name));
            
            #line default
            #line hidden
            this.Write("Id;\r\n");
            
            #line 130 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t// #-#-# {B5914243-E57E-41AE-A7C8-553F2F93267B}\r\n\t\t\t// Before update\r\n\t\t\t// " +
                    "#-#-#\r\n\r\n\t\t\t");
            
            #line 136 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(" = await this.");
            
            #line 136 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository.UpdateAsync(");
            
            #line 136 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n\t\t\t// #-#-# {983B1B6C-14A7-4925-8571-D77447DF0ADA}\r\n\t\t\t// After update\r\n\t\t\t" +
                    "// #-#-#\r\n\r\n            return ");
            
            #line 142 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(";\r\n        }\r\n\r\n");
            
            #line 145 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 foreach (CodeGenModelRelation relation in model.Relations.Where(r => r.Type == "many-to-many" && !string.IsNullOrEmpty(r.Through))) { 
            
            #line default
            #line hidden
            this.Write("        public async Task<");
            
            #line 146 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("> Link");
            
            #line 146 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Model));
            
            #line default
            #line hidden
            this.Write("To");
            
            #line 146 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("Async(");
            
            #line 146 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 146 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            // Validation\r\n            if (");
            
            #line 149 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(" == null) { return null; }\r\n\r\n            // Check if ");
            
            #line 151 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToLower()));
            
            #line default
            #line hidden
            this.Write(" exists\r\n            ");
            
            #line 152 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 152 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(" = await this.");
            
            #line 152 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository.GetByIdAsync(");
            
            #line 152 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 152 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("Id);\r\n            if (");
            
            #line 153 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(" == null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n        " +
                    "    // Check if ");
            
            #line 158 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Model.ToLower()));
            
            #line default
            #line hidden
            this.Write(" exists\r\n            ");
            
            #line 159 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Model));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 159 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Model.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(" = await this.");
            
            #line 159 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Model.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository.GetByIdAsync(");
            
            #line 159 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 159 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Model));
            
            #line default
            #line hidden
            this.Write("Id);\r\n            if (");
            
            #line 160 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Model.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(" == null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n        " +
                    "    // Retrieve existing link\r\n            ");
            
            #line 166 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 166 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Link = this.");
            
            #line 166 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository.GetBy");
            
            #line 166 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("And");
            
            #line 166 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Model));
            
            #line default
            #line hidden
            this.Write("Id(");
            
            #line 166 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 166 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("Id, ");
            
            #line 166 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 166 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Model));
            
            #line default
            #line hidden
            this.Write("Id);\r\n\r\n            if (");
            
            #line 168 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Link == null)\r\n            {\r\n                await this.");
            
            #line 170 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository.InsertAsync(");
            
            #line 170 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(");\r\n            }\r\n            else\r\n            {\r\n                // TODO: Mapp" +
                    "ing of fields on many-to-many\r\n                //");
            
            #line 175 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Link.Field = ");
            
            #line 175 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(".Field;\r\n\r\n                await this.");
            
            #line 177 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository.UpdateAsync(");
            
            #line 177 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Link);\r\n            }\r\n\r\n            return await this.Get");
            
            #line 180 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("ByIdAsync(");
            
            #line 180 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 180 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("Id);\r\n        }\r\n\r\n");
            
            #line 183 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 184 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 foreach (CodeGenModelRelation relation in model.Relations.Where(r => r.Type == "many-to-many" && !string.IsNullOrEmpty(r.Through))) { 
            
            #line default
            #line hidden
            this.Write("        public async Task<");
            
            #line 185 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("> Unlink");
            
            #line 185 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Model));
            
            #line default
            #line hidden
            this.Write("From");
            
            #line 185 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("Async(");
            
            #line 185 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 185 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            // Validation\r\n            if (");
            
            #line 188 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(" == null) { return null; }\r\n\r\n            // Retrieve existing link\r\n            " +
                    "");
            
            #line 191 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 191 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Link = this.");
            
            #line 191 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository.GetBy");
            
            #line 191 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("And");
            
            #line 191 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Model));
            
            #line default
            #line hidden
            this.Write("Id(");
            
            #line 191 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 191 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("Id, ");
            
            #line 191 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 191 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Model));
            
            #line default
            #line hidden
            this.Write("Id);\r\n\t\t\r\n            if (");
            
            #line 193 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Link != null)\r\n            {\r\n                await this.");
            
            #line 195 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository.DeleteAsync(");
            
            #line 195 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Link);\r\n            }\r\n\r\n            return await this.Get");
            
            #line 198 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("ByIdAsync(");
            
            #line 198 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relation.Through.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 198 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("Id);\r\n        }\r\n\r\n");
            
            #line 201 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t/// <summary>\r\n\t\t/// Deletes an existing ");
            
            #line 203 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToLower()));
            
            #line default
            #line hidden
            this.Write(" record by Id.\r\n\t\t/// </summary>\r\n        public async Task<");
            
            #line 205 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("> Delete");
            
            #line 205 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write("Async(");
            
            #line 205 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 205 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToLower()));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n\t\t\t// #-#-# {FE1A99E0-482D-455B-A8C1-3C2C11FACA58}\r\n\t\t\t// Before de" +
                    "letion\r\n\t\t\t// #-#-#\r\n\r\n            await this.");
            
            #line 211 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToCamelCase()));
            
            #line default
            #line hidden
            this.Write("Repository.DeleteAsync(");
            
            #line 211 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToLower()));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n\t\t\t// #-#-# {F09857C0-44E7-4E6C-B3E6-883C0D28E1A6}\r\n\t\t\t// After deletion\r\n\t" +
                    "\t\t// #-#-#\r\n\r\n            return ");
            
            #line 217 "C:\dev\steffbeckers\code-generator\dotnet-angular\code-gen-cli\CodeGenCLI\Templates\WebAPI\BLLTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name.ToLower()));
            
            #line default
            #line hidden
            this.Write(";\r\n        }\r\n    }\r\n}\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public class BLLTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
