<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="CodeGenCLI.CodeGenClasses" #>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace <#= !string.IsNullOrEmpty(config.WebAPI.NamespaceRoot) ? config.WebAPI.NamespaceRoot : config.Name #>.ViewModels
{
	/// <summary>
    /// <#= model.Name #> view model
<# if (!string.IsNullOrEmpty(model.Description)) { #>
    /// <#= model.Description #>.
<# } #>
    /// </summary>
    public class <#= model.Name #>VM
    {
		public <#= model.Name #>VM()
        {
            // Relations

			//// One-to-many
<# foreach (CodeGenModelRelation relation in model.Relations.Where(r => r.Type == "one-to-many")) { #>
			this.<#= relation.Name #> = new List<<#= relation.Model #>VM>();
<# } #>
        }

		/// <summary>
        /// The identifier of <#= model.Name #>.
        /// </summary>
		public Guid Id { get; set; }
<# foreach (CodeGenModelProperty property in model.Properties) { #>

<# if (!string.IsNullOrEmpty(property.Description)) { #>
		/// <summary>
        /// <#= property.Description #>.
        /// </summary>
<# } else { #>
		/// <summary>
        /// The <#= property.Name #> property of <#= model.Name #>.
        /// </summary>
<# } #>
<# if (property.Required) { #>
        [Required]
<# } #>
		public <#= property.Type #> <#= property.Name #> { get; set; }
<# } #>

		// Relations

		//// Many-to-one

<# foreach (CodeGenModelRelation relation in model.Relations.Where(r => r.Type == "many-to-one")) { #>
		/// <summary>
        /// The related <#= relation.Name #> of <#= model.Name #>.
        /// </summary>
		public IList<<#= relation.Model #>VM> <#= relation.Name #> { get; set; }
<# } #>

		//// One-to-many

<# foreach (CodeGenModelRelation relation in model.Relations.Where(r => r.Type == "one-to-many")) { #>
		/// <summary>
        /// The related <#= relation.Name #> of <#= model.Name #>.
        /// </summary>
		public IList<<#= relation.Model #>VM> <#= relation.Name #> { get; set; }
<# } #>
    }
}
