<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="CodeGenCLI.CodeGenClasses" #>
<#@ import namespace="CodeGenCLI.Extensions" #>
import { Component, OnInit } from '@angular/core';
import { Router, ActivatedRoute } from '@angular/router';

// Models
import { <#= model.Name #> } from 'src/app/shared/models/<#= model.Name #>';

// Services
import { <#= model.Name #>Service } from 'src/app/shared/services/<#= model.Name #>Service';

@Component({
  selector: 'app-<#= model.Name.ToLower() #>-detail',
  templateUrl: './detail.component.html',
  styleUrls: ['./detail.component.scss']
})
export class <#= model.Name #>DetailComponent implements OnInit {
  // <#= model.Name #>
  public <#= model.Name.ToCamelCase() #>: <#= model.Name #>;

  constructor(
    private router: Router,
    private route: ActivatedRoute,
    private <#= model.Name.ToCamelCase() #>Service: <#= model.Name #>Service
  ) {
    this.<#= model.Name.ToCamelCase() #> = new <#= model.Name #>();
  }

  ngOnInit(): void {
    // Get id from params
    this.route.params.subscribe((routeParams) => {
      this.get<#= model.Name #>(routeParams.id);
    });
  }

  private get<#= model.Name #>(id: string): void {
    this.<#= model.Name.ToCamelCase() #>Service.get<#= model.Name #>(id).subscribe(
      (<#= model.Name.ToCamelCase() #>: <#= model.Name #>) => {
        this.<#= model.Name.ToCamelCase() #> = <#= model.Name.ToCamelCase() #>;
      },
      (error: any) => {
        if (error.status === 404) {
          alert('<#= model.Name #> could not be found.');
          this.router.navigateByUrl('/<#= (!string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + 's').ToLower() #>');
        }
      }
    );
  }

  public delete<#= model.Name #>(): void {
    // Validate
    if (!this.<#= model.Name.ToCamelCase() #> && !this.<#= model.Name.ToCamelCase() #>.id) {
      return;
    }

    // Confirmation
    if (confirm('Are you sure you want to delete <#= model.Name.ToLower() #>: ' + this.<#= model.Name.ToCamelCase() #>.<#= model.DisplayField.ToCamelCase() #> + '?')) {
      this.<#= model.Name.ToCamelCase() #>Service.delete<#= model.Name #>(this.<#= model.Name.ToCamelCase() #>.id).subscribe(
        () => {
          this.router.navigateByUrl('/<#= (!string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + 's').ToLower() #>');
        },
        (error: any) => {
          if (error.status === 404) {
            alert('<#= model.Name #> could not be found.');
            this.router.navigateByUrl('/<#= (!string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + 's').ToLower() #>');
          }
        }
      );
    }
  }
}
