<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="CodeGenCLI.CodeGenClasses" #>
<#@ import namespace="CodeGenCLI.Extensions" #>
<div fxLayout="column" fxLayoutAlign="start">
  <form [formGroup]="<#= model.Name.ToCamelCase() #>Form" (ngSubmit)="create<#= model.Name #>()" novalidate>
    <div fxLayout="row" fxLayoutAlign="start center" fxLayoutGap="20px">
      <h1>Add new <#= model.Name #></h1>
      <button (click)="create<#= model.Name #>()" [disabled]="<#= model.Name.ToCamelCase() #>Form.invalid">Add</button>
    </div>
    <div fxLayout="row wrap" fxLayoutAlign="start" fxLayoutGap="10px">
<# foreach (CodeGenModelProperty property in model.Properties) { #>
      <div fxLayout="column" fxLayoutAlign="start" fxLayoutGap="5px" fxFlex>
        <label class="bold"><#= property.DisplayName ?? property.Name #></label>
<# if (property.Type == "bool") { #>
        <input type="checkbox" formControlName="<#= property.Name.ToCamelCase() #>"<# if (property.Required) { #> required<# } #>>
<# } else { #>
        <input formControlName="<#= property.Name.ToCamelCase() #>" placeholder="<#= property.DisplayName ?? property.Name #>"<# if (property.Required) { #> required<# } #> />
<# } #>
      </div>
<# } #>
<# foreach (CodeGenModelRelation relation in model.Relations.Where(r => r.Type == "many-to-one")) { #>
      <div fxLayout="column" fxLayoutAlign="start" fxLayoutGap="5px" fxFlex>
        <label class="bold"><#= relation.DisplayName ?? relation.Name #> ID</label>
        <input formControlName="<#= relation.Name.ToCamelCase() #>Id" placeholder="<#= relation.DisplayName ?? relation.Name #> ID"<# if (relation.Required) { #> required<# } #> />
      </div>
<# } #>
    </div>
  </form>
</div>
