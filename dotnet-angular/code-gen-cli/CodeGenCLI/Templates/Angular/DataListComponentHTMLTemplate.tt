<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="CodeGenCLI.CodeGenClasses" #>
<#@ import namespace="CodeGenCLI.Extensions" #>
<div fxLayout="column" fxLayoutAlign="start">
  <div fxLayout="row" fxLayoutAlign="start center" fxLayoutGap="20px">
    <h1><#= !string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + "s" #></h1>
    <a routerLink="/<#= (!string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + "s").ToLower() #>/create">Add new <#= model.Name #></a>
  </div>
  <div fxLayout="row" fxLayoutAlign="start">
    <p *ngIf="!<#= (!string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + "s").ToLower() #>">Loading...</p>
    <p *ngIf="<#= (!string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + "s").ToLower() #>.length === 0">No <#= (!string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + "s").ToLower() #> added yet.</p>
    <table *ngIf="<#= (!string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + "s").ToLower() #>.length > 0" cellspacing="0" cellpadding="5">
      <thead>
<# foreach (CodeGenModelProperty property in model.Properties) { #>
        <th><#= property.DisplayName ?? property.Name #></th>
<# } #>
<# foreach (CodeGenModelRelation relation in model.Relations.Where(r => r.Type == "many-to-one")) { #>
        <th><#= relation.DisplayName ?? relation.Name #></th>
<# } #>
      </thead>
      <tbody>
        <tr *ngFor="let <#= model.Name.ToCamelCase() #> of <#= (!string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + "s").ToLower() #>" [routerLink]="['/<#= (!string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + "s").ToLower() #>', <#= model.Name.ToCamelCase() #>.id]">
<# foreach (CodeGenModelProperty property in model.Properties) { #>
          <td>{{ <#= model.Name.ToCamelCase() #>.<#= property.Name.ToCamelCase() #> }}</td>
<# } #>
<# foreach (CodeGenModelRelation relation in model.Relations.Where(r => r.Type == "many-to-one")) { #>
          <td>
            <span *ngIf="<#= model.Name.ToCamelCase() #>.<#= relation.Name.ToCamelCase() #>">
              {{ <#= model.Name.ToCamelCase() #>.<#= relation.Name.ToCamelCase() #>.<#= relation.DisplayField.ToCamelCase() #> }}
            </span>
          </td>
<# } #>
        </tr>
      </tbody>
    </table>
  </div>
</div>
