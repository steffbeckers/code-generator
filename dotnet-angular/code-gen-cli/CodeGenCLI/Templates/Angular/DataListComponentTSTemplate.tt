<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="CodeGenCLI.CodeGenClasses" #>
<#@ import namespace="CodeGenCLI.Extensions" #>
import { Component, OnInit } from '@angular/core';

// Models
import { <#= model.Name #> } from 'src/app/shared/models/<#= model.Name #>';

// Services
import { <#= model.Name #>Service } from 'src/app/shared/services/<#= model.Name #>Service';

@Component({
  selector: 'app-<#= (!string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + "s").ToLower() #>-list',
  templateUrl: './list.component.html',
  styleUrls: ['./list.component.scss']
})
export class <#= !string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + "s" #>ListComponent implements OnInit {
  public <#= (!string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + "s").ToLower() #>: <#= model.Name #>[];

  constructor(private <#= model.Name.ToCamelCase() #>Service: <#= model.Name #>Service) {
    this.<#= (!string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + "s").ToLower() #> = [];
  }

  ngOnInit(): void {
    this.get<#= !string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + "s" #>();
  }

  private get<#= !string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + "s" #>(): void {
    this.<#= model.Name.ToCamelCase() #>Service.get<#= !string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + "s" #>().subscribe(
      (<#= (!string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + "s").ToLower() #>: <#= model.Name #>[]) => {
        this.<#= (!string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + "s").ToLower() #> = <#= (!string.IsNullOrEmpty(model.NamePlural) ? model.NamePlural : model.Name + "s").ToLower() #>;
      }
    );
  }
}
