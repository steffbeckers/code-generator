<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="CodeGen.Models" #>
using AutoMapper;
using CodeGenOutput.API.BLL;
using CodeGenOutput.API.Models;
using CodeGenOutput.API.ViewModels;
using MediatR;
using System.Threading;
using System.Threading.Tasks;

namespace CodeGenOutput.API.Requests.<#= _model.NamePlural #>
{
    public class Update<#= _model.Name #> : IRequest<Response<<#= _model.Name #>VM>>
    {
        public <#= _model.Name #>UpdateVM <#= _model.Name #>UpdateVM { get; set; }
    }

    public class Update<#= _model.Name #>Handler : IRequestHandler<Update<#= _model.Name #>, Response<<#= _model.Name #>VM>>
    {
        private readonly I<#= _model.Name #>BLL _bll;
        private readonly IMapper _mapper;

        public Update<#= _model.Name #>Handler(IBusinessLogicLayer bll, IMapper mapper)
        {
            _bll = bll;
            _mapper = mapper;
        }

        public async Task<Response<<#= _model.Name #>VM>> Handle(Update<#= _model.Name #> request, CancellationToken cancellationToken)
        {
            Response<<#= _model.Name #>VM> response = new Response<<#= _model.Name #>VM>();

            <#= _model.Name #> <#= _model.Name.ToLower() #> = _mapper.Map<<#= _model.Name #>>(request.<#= _model.Name #>UpdateVM);
            <#= _model.Name.ToLower() #> = await _bll.Update<#= _model.Name #>Async(<#= _model.Name.ToLower() #>);
            response.Message = "<#= _model.Name #> updated";
            response.Data = _mapper.Map<<#= _model.Name #>VM>(<#= _model.Name.ToLower() #>);

            return response;
        }
    }
}
