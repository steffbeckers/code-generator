<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="CodeGen.Models" #>
<# CodeGenModelProperty defaultKey = _config.Models.DefaultKey(_model); #>
using AutoMapper;
using CodeGenOutput.API.BLL;
using MediatR;
using System;
using System.Threading;
using System.Threading.Tasks;

namespace CodeGenOutput.API.Requests.<#= _model.NamePlural #>
{
    public class Delete<#= _model.Name #> : IRequest<Response>
    {
        public <#= defaultKey.Type #> <#= defaultKey.Name #> { get; set; }
    }

    public class Delete<#= _model.Name #>Handler : IRequestHandler<Delete<#= _model.Name #>, Response>
    {
        private readonly I<#= _model.Name #>BLL _bll;

        public Delete<#= _model.Name #>Handler(IBusinessLogicLayer bll, IMapper mapper)
        {
            _bll = bll;
        }

        public async Task<Response> Handle(Delete<#= _model.Name #> request, CancellationToken cancellationToken)
        {
            await _bll.Delete<#= _model.Name #>Async(request.<#= defaultKey.Name #>);

            return new Response()
            {
                Code = "<#= _model.Name.ToUpper() #>_DELETED",
                Message = "<#= _model.Name #> deleted"
            };
        }
    }
}
