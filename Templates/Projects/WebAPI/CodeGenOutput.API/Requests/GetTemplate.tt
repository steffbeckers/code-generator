<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="CodeGen.Models" #>
using AutoMapper;
using CodeGenOutput.API.BLL;
using CodeGenOutput.Models;
using CodeGenOutput.ViewModels;
using MediatR;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;

namespace CodeGenOutput.API.Requests.<#= _model.NamePlural #>
{
    public class Get<#= _model.NamePlural #> : IRequest<Response<List<<#= _model.Name #>ListVM>>>
    {
        public int Skip { get; set; }
        public int Take { get; set; }
    }

    public class Get<#= _model.NamePlural #>Handler : IRequestHandler<Get<#= _model.NamePlural #>, Response<List<<#= _model.Name #>ListVM>>>
    {
        private readonly I<#= _model.Name #>BLL _bll;
        private readonly IMapper _mapper;

        public Get<#= _model.NamePlural #>Handler(IBusinessLogicLayer bll, IMapper mapper)
        {
            _bll = bll;
            _mapper = mapper;
        }

        public async Task<Response<List<<#= _model.Name #>ListVM>>> Handle(Get<#= _model.NamePlural #> request, CancellationToken cancellationToken)
        {
            Response<List<<#= _model.Name #>ListVM>> response = new Response<List<<#= _model.Name #>ListVM>>();

            List<<#= _model.Name #>> <#= _model.NamePlural.ToLower() #> = (await _bll.Get<#= _model.NamePlural #>Async(request.Skip, request.Take)).ToList();
            response.Data = _mapper.Map<List<<#= _model.Name #>ListVM>>(<#= _model.NamePlural.ToLower() #>);

            return response;
        }
    }
}
