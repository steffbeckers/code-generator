<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="CodeGen.Models" #>
<# CodeGenModelProperty defaultKey = _config.Models.DefaultKey(_model); #>
using CodeGenOutput.API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace CodeGenOutput.API.DAL.Configurations
{
    public class <#= _model.Name #>Configuration : IEntityTypeConfiguration<<#= _model.Name #>>
    {
        public void Configure(EntityTypeBuilder<<#= _model.Name #>> builder)
        {
<# CodeGenModelProperty auditDeletedProperty = _config.Models.DefaultAuditDeletedProperty(); #>
<# if (auditDeletedProperty != null) { #>
            builder.HasQueryFilter(x => !x.<#= auditDeletedProperty.Name #>);

<# } #>
            builder.HasKey(x => x.<#= defaultKey.Name #>);
<# foreach (CodeGenModelProperty property in _model.Properties) { #>

            builder.Property(x => x.<#= property.Name #>)
<# if (property.Required) { #>
                .IsRequired()
<# } #>
<# if (property.Type.ToLower() == "string") { #>
<# if (property.MaxLength != null) { #>
                .HasMaxLength(<#= property.MaxLength #>)
<# } else { #>
                .HasMaxLength(<#= _config.Models.StringPropertyMaxLength ?? 100 #>)
<# } #>
<# } #>
<# if (property.DefaultValue != null) { #>
                .HasDefaultValue(<#= property.DefaultValue #>)
<# } #>
<# if (!string.IsNullOrEmpty(property.ColumnType)) { #>
                .HasColumnType("<#= property.ColumnType #>")
<# } #>
            ;
<# } #>
        }
    }
}
